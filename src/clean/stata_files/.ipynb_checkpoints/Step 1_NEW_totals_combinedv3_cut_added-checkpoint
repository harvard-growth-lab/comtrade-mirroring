*-------------------------------------------------------------------------------
clear all 
set more off 
*-------------------------------------------------------------------------------
//global path "/nfs/projects_nobackup/c/cid_trade/Trade_data"
//global path "/Users/sbustos/Dropbox/datasets/Trade_data" 
global path "/n/hausmann_lab/lab/atlas/bustos_yildirim/stata_files"
cd "$path/"

*-------------------------------------------------------------------------------
 
loc startyear = 2015 // 2012 // 1962
loc finalyear = 201
*-------------------------------------------------------------------------------


*=================================================================================
capture program drop cleandata 
program define cleandata
	//quietly{
		noi di "   > ${yy} and classification =  $classification "
		clear
		*-------------------------------------------------------------------------------
		cd "$path/${classification}_raw"
		cap erase temp.csv
		cap erase temp.dta
		// opens compresses files and retrives the useful columns in Python
		loc program  ${path}/DO_files/comtrade_reads_zip.py
		loc rfile  ${path}/${classification}_raw/${classification}_${yy}.zip
		!python3 `program' `rfile'
		//shell python `program' `rfile'  
		//shell python36 `program' `rfile' 	 
		//!python `program' `rfile' 
		*-------------------------------------------------------------------------------
		
		*-------------------------------------------------------------------------------
		//use update/temp.dta, clear
		use temp.dta, clear
		cap erase temp.csv
		cap erase temp.dta
		
		if ("${classification}"=="H0") | ("${classification}"=="HS") {
			keep if agglevel==0 | agglevel==4
			replace commoditycode = "00"+commoditycode if length(commoditycode)==4 & agglevel==6
			replace commoditycode = "0"+commoditycode  if length(commoditycode)==5 & agglevel==6
			gen reporter_ansnoclas = tradevalue if partner_iso=="ANS"  & agglevel==4 & substr(commoditycode,1,4)=="9999"
		}
		
		if ("${classification}"=="S1") | ("${classification}"=="S2") | ("${classification}"=="ST") {
			keep if agglevel==0 | agglevel==4
			replace commoditycode = "00"+commoditycode if length(commoditycode)==4 & agglevel==4
			replace commoditycode = "0"+commoditycode  if length(commoditycode)==5 & agglevel==4
			gen reporter_ansnoclas = tradevalue if partner_iso=="ANS" & commoditycode=="9310" & agglevel==4
		}
			
		
			
		*-------------------------------------------------------------------------------				
		// Dealing with Germany (reunification) and Russia
		*-------------------------------------------------------------------------------
		drop if reporter_iso == "DEU" & partner_iso=="DDR"
		drop if reporter_iso == "DDR" & partner_iso=="DEU"
		replace partner_iso  = "DEU" if inlist(partner_iso,"DEU","DDR")
		replace reporter_iso = "DEU" if inlist(reporter_iso,"DEU","DDR")
		
		replace partner_iso  = "RUS" if inlist(partner_iso,"RUS","SUN")
		replace reporter_iso = "RUS" if inlist(reporter_iso,"RUS","SUN")
		*-------------------------------------------------------------------------------
		
		
		compress
		collapse (sum) tradevalue reporter_ansnoclas , by( year tradeflow agglevel reporter_iso partner_iso )
		recast float tradevalue reporter_ansnoclas, force
		 

		*------------------------------------------------------------------------------- 
		tempfile zero six temp  exp2WLD imp2WLD
		*-------------------------------------------------------------------------------
		preserve 
			if ("${classification}"=="H0") | ("${classification}"=="HS") {	
				keep if agglevel == 4
			}
			if ("${classification}"=="S1") | ("${classification}"=="S2") | ("${classification}"=="ST") {
				keep if agglevel == 4
			}
				
c			rename tradevalue valuesix
			keep reporter_iso partner_iso valuesix reporter_ansnoclas tradeflow
			reshape wide valuesix reporter_ansnoclas, i(reporter_iso partner_iso) j(tradeflow)
			save `six', replace 
			
			keep reporter_iso partner_iso valuesix2 reporter_ansnoclas2	
			rename reporter_iso exporter
			rename partner_iso importer
			rename valuesix2 exports_six
			rename reporter_ansnoclas2 exp2ansnoclass_six
			save `temp', replace
			
			use `six', clear
			keep reporter_iso partner_iso valuesix1 reporter_ansnoclas1
			rename reporter_iso importer 
			rename partner_iso exporter
			rename valuesix1 imports_six
			rename reporter_ansnoclas1 imp2ansnoclass_six	
			
			merge 1:1 exporter importer using `temp', nogen 
			egen temp = rowtotal( imports_six imp2ansnoclass_six exports_six exp2ansnoclass_six )
			drop if temp==0
			cap drop temp
			order exporter importer
			save `six', replace 
		restore 
		*------------------------------------------------------------------------------- 
		 
		
		*--------------------------------------------------------------------------------	
			keep if agglevel == 0
			keep reporter_iso partner_iso tradevalue tradeflow
			rename tradevalue valuezero
			reshape wide valuezero, i(reporter_iso partner_iso) j(tradeflow)
			save `zero', replace 
			
			keep reporter_iso partner_iso valuezero2
			rename reporter_iso exporter
			rename partner_iso importer
			rename valuezero2 exports_zero
			save `temp', replace
			
			use `zero', clear
			keep reporter_iso partner_iso valuezero1
			rename reporter_iso importer 
			rename partner_iso exporter
			rename valuezero1 imports_zero
			
			merge 1:1 exporter importer using `temp', nogen 
			egen temp = rowtotal( imports_zero exports_zero  )
			drop if temp==0
			cap drop temp
			order exporter importer
			
			merge 1:1 exporter importer using `six', nogen 
		//at country level
			order exporter importer exports_zero exports_six exp2ansnoclass_six ///
									imports_zero imports_six imp2ansnoclass_six														
		*--------------------------------------------------------------------------------
		
		*--------------------------------------------------------------------------------
		preserve	
			keep if importer=="WLD"
			keep exporter   exports_zero
			rename exports_zero exp2WLD
			save `exp2WLD'
		restore
		preserve	
			keep if exporter=="WLD"
			keep importer  imports_zero
			rename imports_zero imp2WLD
			save `imp2WLD'
		restore	
		*--------------------------------------------------------------------------------
			
		drop if importer=="WLD" | exporter=="WLD"
		merge m:1 exporter using `exp2WLD', nogen
		merge m:1 importer using `imp2WLD', nogen
		*--------------------------------------------------------------------------------
			
		*--------------------------------------------------------------------------------	
		gen ratio_exp  = exp2ansnoclass_six / exp2WLD
		replace ratio_exp = 0 if ratio_exp==.
		
		gen ratio_imp  = imp2ansnoclass_six / imp2WLD
		replace ratio_imp = 0 if ratio_imp==.
		
		//sort exporter importer 
		compress
		/*
		gsort exporter -exports_zero
		format exports* imports* exp2* imp2* %15.0fc
		keep if exporter=="ARE"
		*/
		
		
		replace exports_zero = exports_zero - exp2ansnoclass_six if ratio_exp>0.25
		replace exports_six  = exports_six - exp2ansnoclass_six if ratio_exp>0.25
		
		replace imports_zero = imports_zero - imp2ansnoclass_six if ratio_imp>0.25
		replace imports_six  = imports_six - exp2ansnoclass_six if ratio_imp>0.25
		*--------------------------------------------------------------------------------
		
		*--------------------------------------------------------------------------------
		egen exportvalue_fob = rowmean( exports_zero exports_six )
		egen importvalue_cif = rowmean( imports_zero imports_six )
		egen temp = rowmax(exportvalue_fob importvalue_cif)
		drop if temp==0
		drop if temp<1000
		gen int year=${yy}
		keep year exporter importer exportvalue_fob importvalue_cif
		format exportvalue_fob importvalue_cif  %15.0fc
		sort exporter importer 
		
		*--------------------------------------------------------------------------------
	//}
end
*=================================================================================	
		


*=================================================================================
forval y=`startyear'/`finalyear' {
	quietly{
		tempfile  trade_S2 trade_S3 trade_H0 trade_HS trade_ST
		global yy = `y'
		
		noi di "> Doing year = " `y'

		// S2
		if `y' >= 1976 & `y'<1995 {
			global classification S2
			noi di "	c = ${classification} "
			cap cleandata
			save `trade_S2'		
		}
		
		/*
		if `y' >= 1988  & `y'<=2003 {
			global classification S3
			noi di "	c = ${classification} "
			cap cleandata
			save `trade_S3'		
		}
		*/
		
		if `y' >= 1994 {
			global classification H0
			noi di "	c = ${classification} "
			 cleandata
			save `trade_H0'
		}
		

		/* HS
		if `y' >= 1994 {
			global classification HS
			noi di "	c = ${classification} "
			cap cleandata
			save `trade_HS'
		}
		*/
		/*
		// ST
		if `y' <= 2003 {
			global classification ST
			cap cleandata
			save `trade_ST'
		}
		*/


		if `y' <= 1985 {
		// S1 
			global classification S1
			noi di "	c = ${classification} "
		        cap cleandata
		}
		
		
		*------------------------------------------------------------------------
		noi di "	:: merging measures from different datasets"				
		if `y' >= 1976 & `y'<1995  {
			cap merge 1:1 year exporter importer using `trade_S2', nogenerate 
		}
		if `y' >= 1995  {
			cap merge 1:1 year exporter importer using `trade_H0', nogenerate 
		}
		if `y' >= 1995  {
			cap merge 1:1 year exporter importer using `trade_HS', nogenerate 
		}
		if `y' >= 1985  & `y'<=2003 {
			cap merge 1:1 year exporter importer using `trade_S3', nogenerate 
		}
		if `y'<=2003 {
			cap merge 1:1 year exporter importer using `trade_ST', nogenerate 
		}
		cap order year exporter importer exportvalue_fob* importvalue_cif* importvalue_fob*
		*------------------------------------------------------------------------		
		
		*------------------------------------------------------------------------
		noi di "	:: combining measures"
		cap egen temp1 = rowmedian( exportvalue_fob* )
		cap egen temp2 = rowmedian( importvalue_cif* )
		cap format temp* %15.0fc
		keep year exporter importer  temp*
		*------------------------------------------------------------------------
		
		cap order year exporter importer  temp* 
		
		rename temp1 exportvalue_fob
		rename temp2 importvalue_cif
		
		//replace exportvalue_fob = . if exporter=="ANS"
		//replace importvalue_cif = . if importer=="ANS"
		
		save ${path}/Totals_raw_`y'.dta, replace 
		noi di "	:: done!"
	}	
}	
*-------------------------------------------------------------------------------


loc startyear = 1962
loc finalyear = 2019
cd "$path/"
*-------------------------------------------------------------------------------
clear
quietly { 
	//loc startyear = 2012
	//use "/Users/sbustos/Dropbox/datasets/Trade_data/Totals_trade.dta"
	//drop total_exports total_imports
	//drop if year>=`startyear'
	*-------------------------------------------------------------------------------
	//loc startyear = 2016
	//loc finalyear = 2018
	*-------------------------------------------------------------------------------	
	noi di "	:: Merging years "
	forval y=`startyear'/`finalyear' {
		append using ${path}/Totals_raw_`y'.dta 
		cap erase ${path}/Totals_raw_`y'.dta 

	}
	sort year exporter importer 
	format exportva* importval* %18.0fc

	save ${path}/Totals_RAW_trade.dta, replace 


	use ${path}/Totals_RAW_trade.dta, clear

	noi di "	:: Adding distance measures"
	//merge 1:1 exporter importer using "D:\Data\Trade_data\Support_Files\country_country_distance.dta",  keep(3 1) nogen
	replace exporter="ROM" if exporter=="ROU"
	replace importer="ROM" if importer=="ROU"
	cap merge m:1 exporter importer using "Support_Files/dist_cepii.dta", keep(3 1) nogen 
	cap merge m:1 exporter importer using "/Users/sbustos/Dropbox/datasets/Trade_data/update/dist_cepii.dta", keep(3 1) nogen  
	replace exporter="ROU" if exporter=="ROM"
	replace importer="ROU" if importer=="ROM"
	
	gen lndist = ln(distwces)
	replace lndist = ln(dist) if lndist==. & dist!=.
	gen oneplust = importvalue_cif / exportvalue_fob
	gen lnoneplust = ln(importvalue_cif / exportvalue_fob)
	format lnoneplust oneplust %9.2fc

	egen int idc_o = group(exporter)
	egen int idc_d = group(importer)
	
	cap drop tau
	gen tau = . 
	
	
	noi di "	:: Calculating CIF/FOB correction "
	sum year
	loc firsty = r(min)
	loc lasty = r(max)
	forval y=`firsty'/`lasty' { 
		quietly{
			noi di "Doing year = " `y'
				preserve 
					loc lag = `y'-1
					loc lead = `y'+1
					keep if inlist(year, `lag', `y', `lead')
					qui sum exportvalue_fob, d
					loc exp_p1 = max(r(p1), 10^6)
					qui sum importvalue_cif, d
					loc imp_p1 = max(r(p1), 10^6)
					
					qui drop if exportvalue_fob<(`exp_p1') | importvalue_cif<(`imp_p1')		
					winsor2 lnoneplust, cut(10 90) replace 
					reghdfe lnoneplust  lndist contig,  abs(year#idc_o year#idc_d) 
					loc c = _coef[_cons]
					loc c_se = _se[_cons]
					loc beta_dist = _coef[lndist]
					loc se_dist = _se[lndist]
					loc beta_contig = _coef[contig]
				restore
			replace tau = `c' + (`beta_dist' * lndist) + (`beta_contig' * contig) if year == `y'
			replace tau = 0 if year == `y' & tau<0 & tau!=.
			replace tau = 0.2 if year == `y' & tau>0.2 & tau!=.
			qui sum tau  if year == `y'
			replace tau = r(mean) if year == `y' & tau==. 
		}	
	}			
	order year exporter importer exportvalue_fob importvalue_cif  lnoneplust tau 

	noi di "	:: adjusting FOB values"	
	cap drop importvalue_fob
	gen importvalue_fob =.
	format importvalue_fob %18.0fc
	order year exporter importer exportvalue_fob importvalue_cif importvalue_fob
	// small difference
	replace importvalue_fob = importvalue_cif if importvalue_fob==. & abs(lnoneplust)<0.05	
	// positive
	replace importvalue_fob = importvalue_cif*(1-tau) if importvalue_fob==. & lnoneplust>0
	replace importvalue_fob = importvalue_cif if importvalue_fob==. & lnoneplust<0
	
	
	order year exporter importer exportvalue_fob importvalue_cif importvalue_fob
	keep  year exporter importer exportvalue_fob importvalue_cif importvalue_fob 
	sort year exporter importer 
}	
save ${path}/Totals_RAW_trade.dta, replace 	
*===============================================================================	

*/



*-------------------------------------------------------------------------------
capture program drop detectingwierdflows 
program define detectingwierdflows
	quietly{
		order year exporter importer exportvalue_fob importvalue_cif importvalue_fob
		keep  year exporter importer exportvalue_fob importvalue_cif importvalue_fob 
		
		egen id = group(exporter importer)
		tsset id year
		
		egen value = rowmax(exportvalue_fob importvalue_fob)
		egen total_exporter = total(value), by(year exporter)
		egen total_importer = total(value), by(year importer)

		gen share_exporter = value/total_exporter
		gen share_importer = value/total_importer
		
		forval y=1/3 {
			quietly{
				gen exp_lag`y' = l`y'.share_exporter
				gen exp_lead`y' = f`y'.share_exporter
				gen imp_lag`y' = l`y'.share_importer
				gen imp_lead`y' = f`y'.share_importer
			}	
		}
		
		egen mean_share_exporter = rowmean(exp_lag* exp_lead*)
		egen mean_share_importer = rowmean(imp_lag* imp_lead*)
		drop exp_lag* exp_lead*
		drop imp_lag* imp_lead*
		
		//egen mean_share_exporter = mean(share_exporter), by(exporter importer)
		//egen mean_share_importer = mean(share_importer), by(exporter importer)

		egen Nobs  = count(share_importer), by(exporter importer)

		gen abslogdif = abs(log(exportvalue_fob/importvalue_fob))
		
		format value %18.0fc
		format abslogdif share* mean_* %9.2fc
		
		order year exporter importer exportvalue_fob  importvalue_fob ///
				   share_exporter mean_share_exporter share_importer mean_share_importer ///
				   abslogdif
		sort exporter importer year		   
	}
		//tabstat share* , by(year) s( p95)
		//tabstat abslogdif , by(year) s( p95)
		
end
*-------------------------------------------------------------------------------



*-------------------------------------------------------------------------------
capture program drop weird_flows1
program define weird_flows1
	quietly{
		loc sharelimit = 0.25
		loc sharedeviation = 0.1
		loc abslogdif = 3
		//  & ( mean_share_exporter<`sharelimit' & mean_share_importer<`sharelimit') ///
		global identify1  (share_exporter > `sharelimit' | share_importer > `sharelimit' ) ///
					   & ( (share_exporter - mean_share_exporter)>`sharedeviation' | (share_importer - mean_share_importer)>`sharedeviation' ) /// 
					   & ( Nobs >= 5 ) ///
					   & (abslogdif>`abslogdif' & abslogdif!=.) ///
					   & (value > 2*10^8) ///
					   & abs(exportvalue_fob - importvalue_fob)>2*10^8 ///
					   & (exporter!="ANS" & importer!="ANS") 
		gen byte mark1 = ( ${identify1} )			
	}	
end
*-------------------------------------------------------------------------------


*-------------------------------------------------------------------------------
capture program drop weird_flows2
program define weird_flows2
	quietly{
		cap drop mark2
		loc sharelimit = 0.25
		loc sharedeviation = 0.1	
		//  & ( mean_share_exporter<`sharelimit' & mean_share_importer<`sharelimit') ///
		local identify2 (share_exporter > `sharelimit' | share_importer > `sharelimit' ) ///
					  & ( (share_exporter - mean_share_exporter)>`sharedeviation' | (share_importer - mean_share_importer)>`sharedeviation' ) /// 		 
					  & ( Nobs >= 5 ) ///
					  & (abslogdif==.) ///
					  & (value > 2.5*10^8) ///
					  & (exporter!="ANS" & importer!="ANS") 	
		//br if `identify2'		
		gen byte mark2 = ( `identify2')
	}	
end
*-------------------------------------------------------------------------------



*-------------------------------------------------------------------------------
capture program drop ANS_spkies
program define ANS_spkies
	quietly{
		forval y=1/2 {
			gen lag`y' = l`y'.share
			gen lead`y' = f`y'.share
			
		}
		egen mashare = rowmean(lag* lead*)

		cap drop lag*	
		cap drop lead*			

		format mashare %9.1fc	

		gen mark = (share/mashare)
		sum mashare if mashare>0 & share>=1, d
		sum mark if mashare>min( r(p10) , 0.025 ), d
		loc limitmark = r(p95)
		loc res (mark >=`limitmark') & (mark>=2.5 & mark!=.) ///
		        & ((share-mashare)>1)  & share>=1 & share!=. ///
				& (ln(value/l1.value)>1.2) & ((value - l1.value)>10^8)  /// 
				& value>2*10^8
		//br if `res'		
		sum share if `res'
		loc Nobs2 = r(N)
		replace mark = (`res') 
		replace share = mashare if mark

		sum share
		loc Nobs1 = r(N)	
		noi di " Change at : = " floor(100*`limitmark')/100 " modifying ANS in " `Nobs2' "/" `Nobs1' 
	}	
end
*-------------------------------------------------------------------------------		



tempfile to_ANS from_ANS
*===============================================================================
// Solving exports from ANS
*===============================================================================
clear
use ${path}/Totals_RAW_trade.dta
gen to_ANS = exportvalue_fob if importer=="ANS"
collapse (sum)  exportvalue_fob  value =  to_ANS , by(year exporter)
format exportvalue_fob   value %15.0fc
gen share = 100*(value / exportvalue_fob)
gen oldshare = share
format share oldshare %9.2fc
egen idc = group(exporter)
tsset idc year
forval j=1/5 {
	ANS_spkies
	rename mark tochange`j'
	keep year exporter exportvalue_fob value share oldshare idc tochange*
}
//br if inlist(exporter,"ISR","NOR")
egen obstochange = rowtotal(tochange*)
keep if  obstochange>0
sort  exporter year
gen importer="ANS"
gen to_ANS = exportvalue_fob * (share/100)
drop if to_ANS==0 | to_ANS==.
keep year exporter importer to_ANS share oldshare
save `to_ANS'
*-------------------------------------------------------------------------------

 



*===============================================================================
// Solving imports from ANS
*===============================================================================
clear
use ${path}/Totals_RAW_trade.dta
gen from_ANS = importvalue_fob if exporter=="ANS"
collapse (sum)  importvalue_fob   value = from_ANS , by(year importer)
format importvalue_fob value %15.0fc
gen share = 100*(value / importvalue_fob)
gen oldshare = share
format share oldshare %9.2fc
egen idc = group(importer)
tsset idc year
forval j=1/5 {
	ANS_spkies
	rename mark tochange`j'
	keep year importer importvalue_fob value share oldshare idc tochange*
}
egen obstochange = rowtotal(tochange*)
keep if  obstochange>0
gen exporter="ANS"
gen from_ANS = importvalue_fob * (share/100)
drop if from_ANS==0 | from_ANS==.
keep year exporter importer from_ANS share oldshare
save `from_ANS'


	
*===============================================================================
// cleaning section
*===============================================================================
clear
use ${path}/Totals_RAW_trade.dta

merge 1:1 year exporter importer using `to_ANS'
rename _merge exp_merge
merge 1:1 year exporter importer using `from_ANS'
rename _merge imp_merge

/*
format to_ANS from_ANS %18.0fc
list year exporter importer exportvalue_fob to_ANS if exp_merge==3

list year exporter importer importvalue_fob from_ANS if imp_merge==3

tab exporter if exp_merge==3
tab importer if imp_merge==3
br if exp_merge==3
*/


replace exportvalue_fob = to_ANS if exp_merge==3
replace importvalue_fob = from_ANS if imp_merge==3
drop exp_merge  imp_merge
drop to_ANS from_ANS


/*
br if (exporter=="ALB" & importer=="NGA") | (importer=="ALB" & exporter=="NGA")	
br if (exporter=="USA" & importer=="ABW") | (importer=="USA" & exporter=="ABW")	
br if (share_exporter>0.25 | share_importer>0.25) & (exporter!="ANS" & importer!="ANS")
*/	
	
/* Conditions:
		- Extreme shares of exports or imports
		- No areas not specified 
		- Large difference (absolut log difference)
		- Value 
		
		
loc ctry BLZ
br if (exporter=="NGA" & importer=="`ctry'") | (exporter=="`ctry'" & importer=="NGA")		
*/


forval j=1/5 {
	noi di ":: Loop = " `j'
	*-------------------------------------------------------------------------------
	// Case 1 : both observations
	detectingwierdflows
	weird_flows1
	*-------------------------------------------------------------------------------
	/*
	sort exporter year
	br year exporter importer  exportvalue_fob importvalue_fob ///
	   share_exporter  mean_share_exporter  share_importer  mean_share_importer value mark1 if exportvalue_fob==value & mark1
	   
	sort importer year   
	br year exporter importer  exportvalue_fob importvalue_fob ///
	   share_exporter  mean_share_exporter  share_importer  mean_share_importer value mark1 if importvalue_fob==value & mark1
	   
	*/
	
	replace exportvalue_fob =  total_exporter*mean_share_exporter if exportvalue_fob==value & mark1
	replace importvalue_fob =  total_importer*mean_share_importer if importvalue_fob==value & mark1
	*-------------------------------------------------------------------------------`		   
				

	*-------------------------------------------------------------------------------
	// Case 2 : one flow
	*-------------------------------------------------------------------------------
	detectingwierdflows
	weird_flows2	
	*-------------------------------------------------------------------------------	
	/*
	br if mark2
	*/
	replace exportvalue_fob =  total_exporter*mean_share_exporter if exportvalue_fob==value & mark2
	replace importvalue_fob =  total_importer*mean_share_importer if importvalue_fob==value & mark2
	
	
	order year exporter importer exportvalue_fob importvalue_cif importvalue_fob
	keep  year exporter importer exportvalue_fob importvalue_cif importvalue_fob 	
	
}
//============================================================================================================	
	
	
replace importvalue_fob = . if (exporter=="ALB" & importer=="NGA") & inlist(year,2008,2009)	
replace importvalue_fob = . if (exporter=="BLZ" & importer=="NGA") & inlist(year,2008,2009,2011)	

egen temp = rowmax( exportvalue_fob importvalue_fob)	
format temp %18.0fc
drop if temp<10^4
drop if temp==.
drop temp
	stop
save "${path}/Totals_trade.dta", replace 
//============================================================================================================	
//use  "${path}/Totals_trade.dta", clear
		
